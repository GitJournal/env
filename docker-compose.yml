version: "3"

services:
  reverse-proxy:
    image: traefik:v2.3
    restart: always
    command:
      - --api.dashboard=false
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.email=gitjournal.io@gmail.com
      - --certificatesresolvers.myresolver.acme.storage=/etc/traefik/acme/acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/acme:/etc/traefik/acme

  whoami:
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`api.gitjournal.io`)"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"

  postgres:
    image: postgres
    restart: always
    env_file:
      - secrets/postgres.env
    environment:
      - POSTGRES_HOST_AUTH_METHOD=md5
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  gotrue_migrate:
    image: ghcr.io/gitjournal/gotrue
    command: gotrue migrate
    env_file:
      - gotrue.env
      - secrets/gotrue.env

  gotrue:
    image: ghcr.io/gitjournal/gotrue
    restart: always
    ports:
      - 9999:9999
    env_file:
      - gotrue.env
      - secrets/gotrue.env
    labels:
      - "traefik.http.routers.gotrue.rule=Host(`api.gitjournal.io`) && PathPrefix(`/auth/`)"
      - "traefik.http.routers.gotrue.tls=true"
      - "traefik.http.routers.gotrue.tls.certresolver=myresolver"
      - "traefik.http.middlewares.gotrue.stripprefix.prefixes=/auth"
      - "traefik.http.middlewares.gotrue.stripprefix.forceSlash=false"
