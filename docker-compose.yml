version: "3.9"

networks:
  web:
    external: true
  internal:
    external: true
  default:
    external: true
    name: internal

services:
  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./data/caddy/data:/data
      - ./data/caddy/config:/config
      - ./data/fdroid:/fdroid
    networks:
      - web
      - internal

  postgres:
    image: supabase/postgres
    restart: unless-stopped
    env_file:
      - secrets/postgres.env
    environment:
      - POSTGRES_HOST_AUTH_METHOD=md5
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  listmonk:
    image: listmonk/listmonk:v2.0.0
    restart: unless-stopped
    volumes:
      - ./secrets/listmonk.config.toml/:/listmonk/config.toml
    depends_on:
      - postgres

  # listmonk_install:
  #   image: listmonk/listmonk:v2.0.0
  #   command: ["sh", "-c", "yes | ./listmonk --install"]
  #   ports:
  #     - "9000:9000"
  #   volumes:
  #     - ./secrets/listmonk.config.toml/:/listmonk/config.toml

  # listmonk_upgrade:
  #   image: listmonk/listmonk:v2.0.0
  #   command: ["sh", "-c", "yes | ./listmonk --upgrade"]
  #   ports:
  #     - "9000:9000"
  #   volumes:
  #     - ./secrets/listmonk.config.toml/:/listmonk/config.toml

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./data/prometheus:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
    depends_on:
      - cadvisor

  node-exporter:
    image: prom/node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"

  alertmanager:
    image: prom/alertmanager
    restart: unless-stopped
    volumes:
      - "./alertmanager/:/etc/alertmanager/"
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"

  cadvisor:
    image: google/cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  grafana:
    image: grafana/grafana:8.2.0
    restart: unless-stopped
    depends_on:
      - prometheus
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.env
      - ./secrets/grafana.env
    user: "472"

  loki:
    image: grafana/loki:2.3.0
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml
      - ./data/loki:/data/

  promtail:
    image: grafana/promtail:2.3.0
    restart: unless-stopped
    depends_on:
      - loki
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail:/etc/promtail-config/
      - ./data/promtail:/data/
    command: -config.file=/etc/promtail/config.yml
    ports:
      - "3500:3500" # Docker logging

  n8n:
    image: n8nio/n8n
    restart: unless-stopped
    depends_on:
      - postgres
    env_file:
      - ./secrets/n8n.env
    volumes:
      - ./data/n8n:/home/node/.n8n
    command: n8n start
